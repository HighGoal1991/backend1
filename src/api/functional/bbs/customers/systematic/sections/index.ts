/**
 * @packageDocumentation
 * @module api.functional.bbs.customers.systematic.sections
 */
//================================================================
import { AesPkcs5 } from "./../../../../../__internal/AesPkcs5";
import { Fetcher } from "./../../../../../__internal/Fetcher";
import { Primitive } from "./../../../../../Primitive";
import type { IConnection } from "./../../../../../IConnection";

import type { IBbsSection } from "./../../../../../structures/bbs/systematic/IBbsSection";


/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller BbsCustomerSystematicSectionsController.index()
 * @path GET /bbs/customers/systematic/sections/
 */
export function index(connection: IConnection, ): Promise<index.Output>
{
    return Fetcher.fetch
    (
        connection,
        {"input_encrypted":false,"output_encrypted":true},
        "GET",
        `/bbs/customers/systematic/sections/`
    );
}
export namespace index
{
    export type Output = Primitive<Array<IBbsSection>>;
}



//---------------------------------------------------------
// TO PREVENT THE UNUSED VARIABLE ERROR
//---------------------------------------------------------
AesPkcs5;
Fetcher;
Primitive;
