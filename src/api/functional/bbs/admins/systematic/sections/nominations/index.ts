/**
 * @packageDocumentation
 * @module api.functional.bbs.admins.systematic.sections.nominations
 */
//================================================================
import { AesPkcs5 } from "./../../../../../../__internal/AesPkcs5";
import { Fetcher } from "./../../../../../../__internal/Fetcher";
import { Primitive } from "./../../../../../../Primitive";
import type { IConnection } from "./../../../../../../IConnection";

import type { IBbsSection } from "./../../../../../../structures/bbs/systematic/IBbsSection";


/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller BbsAdminSystematicSectionNominationsController.store()
 * @path GET /bbs/admins/systematic/sections/:code/nominations/:id
 */
export function store(connection: IConnection, code: string, id: string): Promise<store.Output>
{
    return Fetcher.fetch
    (
        connection,
        {"input_encrypted":false,"output_encrypted":false},
        "GET",
        `/bbs/admins/systematic/sections/${code}/nominations/${id}`
    );
}
export namespace store
{
    export type Output = Primitive<IBbsSection.INominatedManager>;
}

/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller BbsAdminSystematicSectionNominationsController.erase()
 * @path DELETE /bbs/admins/systematic/sections/:code/nominations/:id
 */
export function erase(connection: IConnection, code: string, id: string): Promise<void>
{
    return Fetcher.fetch
    (
        connection,
        {"input_encrypted":false,"output_encrypted":false},
        "DELETE",
        `/bbs/admins/systematic/sections/${code}/nominations/${id}`
    );
}



//---------------------------------------------------------
// TO PREVENT THE UNUSED VARIABLE ERROR
//---------------------------------------------------------
AesPkcs5;
Fetcher;
Primitive;
