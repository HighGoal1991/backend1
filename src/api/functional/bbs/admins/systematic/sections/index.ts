/**
 * @packageDocumentation
 * @module api.functional.bbs.admins.systematic.sections
 */
//================================================================
import { AesPkcs5 } from "./../../../../../__internal/AesPkcs5";
import { Fetcher } from "./../../../../../__internal/Fetcher";
import { Primitive } from "./../../../../../Primitive";
import type { IConnection } from "./../../../../../IConnection";

import type { IBbsSection } from "./../../../../../structures/bbs/systematic/IBbsSection";

export * as nominations from "./nominations";

/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller BbsAdminSystematicSectionsController.store()
 * @path POST /bbs/admins/systematic/sections/
 */
export function store(connection: IConnection, input: Primitive<store.Input>): Promise<store.Output>
{
    return Fetcher.fetch
    (
        connection,
        {"input_encrypted":true,"output_encrypted":true},
        "POST",
        `/bbs/admins/systematic/sections/`,
        input
    );
}
export namespace store
{
    export type Input = Primitive<IBbsSection.IStore>;
    export type Output = Primitive<IBbsSection>;
}

/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller BbsAdminSystematicSectionsController.update()
 * @path PUT /bbs/admins/systematic/sections/:code
 */
export function update(connection: IConnection, code: string, input: Primitive<update.Input>): Promise<void>
{
    return Fetcher.fetch
    (
        connection,
        {"input_encrypted":true,"output_encrypted":false},
        "PUT",
        `/bbs/admins/systematic/sections/${code}`,
        input
    );
}
export namespace update
{
    export type Input = Primitive<IBbsSection.IUpdate>;
}

/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller BbsAdminSystematicSectionsController.index()
 * @path GET /bbs/admins/systematic/sections/
 */
export function index(connection: IConnection, ): Promise<index.Output>
{
    return Fetcher.fetch
    (
        connection,
        {"input_encrypted":false,"output_encrypted":true},
        "GET",
        `/bbs/admins/systematic/sections/`
    );
}
export namespace index
{
    export type Output = Primitive<Array<IBbsSection>>;
}

/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller BbsAdminSystematicSectionsController.unify()
 * @path POST /bbs/admins/systematic/sections/unify
 */
export function unify(connection: IConnection, input: Primitive<unify.Input>): Promise<void>
{
    return Fetcher.fetch
    (
        connection,
        {"input_encrypted":true,"output_encrypted":false},
        "POST",
        `/bbs/admins/systematic/sections/unify`,
        input
    );
}
export namespace unify
{
    export type Input = Primitive<IBbsSection.IUnify>;
}



//---------------------------------------------------------
// TO PREVENT THE UNUSED VARIABLE ERROR
//---------------------------------------------------------
AesPkcs5;
Fetcher;
Primitive;
