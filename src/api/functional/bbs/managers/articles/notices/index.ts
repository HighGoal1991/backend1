/**
 * @packageDocumentation
 * @module api.functional.bbs.managers.articles.notices
 */
//================================================================
import { AesPkcs5 } from "./../../../../../__internal/AesPkcs5";
import { Fetcher } from "./../../../../../__internal/Fetcher";
import { Primitive } from "./../../../../../Primitive";
import type { IConnection } from "./../../../../../IConnection";

import type { IBbsArticle } from "./../../../../../structures/bbs/articles/IBbsArticle";
import type { IBbsNoticeArticle } from "./../../../../../structures/bbs/articles/IBbsNoticeArticle";
import type { IPage } from "./../../../../../structures/common/IPage";


/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller BbsManagerArticleNoticesController.store()
 * @path POST /bbs/managers/articles/notices/:code/
 */
export function store(connection: IConnection, code: string, input: Primitive<store.Input>): Promise<store.Output>
{
    return Fetcher.fetch
    (
        connection,
        {"input_encrypted":true,"output_encrypted":true},
        "POST",
        `/bbs/managers/articles/notices/${code}/`,
        input
    );
}
export namespace store
{
    export type Input = Primitive<IBbsArticle.IStore>;
    export type Output = Primitive<IBbsNoticeArticle>;
}

/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller BbsManagerArticleNoticesController.update()
 * @path PUT /bbs/managers/articles/notices/:code/:id
 */
export function update(connection: IConnection, code: string, id: string, input: Primitive<update.Input>): Promise<update.Output>
{
    return Fetcher.fetch
    (
        connection,
        {"input_encrypted":true,"output_encrypted":true},
        "PUT",
        `/bbs/managers/articles/notices/${code}/${id}`,
        input
    );
}
export namespace update
{
    export type Input = Primitive<IBbsArticle.IStore>;
    export type Output = Primitive<IBbsArticle.IContent>;
}

/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller BbsManagerArticleNoticesController.index()
 * @path PATCH /bbs/managers/articles/notices/:code/
 */
export function index(connection: IConnection, code: string, input: Primitive<index.Input>): Promise<index.Output>
{
    return Fetcher.fetch
    (
        connection,
        {"input_encrypted":true,"output_encrypted":true},
        "PATCH",
        `/bbs/managers/articles/notices/${code}/`,
        input
    );
}
export namespace index
{
    export type Input = Primitive<IBbsArticle.IRequest<IBbsArticle.IRequest.ISearch>>;
    export type Output = Primitive<IPage<IBbsNoticeArticle.ISummary>>;
}

/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller BbsManagerArticleNoticesController.at()
 * @path GET /bbs/managers/articles/notices/:code/:id
 */
export function at(connection: IConnection, code: string, id: string): Promise<at.Output>
{
    return Fetcher.fetch
    (
        connection,
        {"input_encrypted":false,"output_encrypted":true},
        "GET",
        `/bbs/managers/articles/notices/${code}/${id}`
    );
}
export namespace at
{
    export type Output = Primitive<IBbsNoticeArticle>;
}



//---------------------------------------------------------
// TO PREVENT THE UNUSED VARIABLE ERROR
//---------------------------------------------------------
AesPkcs5;
Fetcher;
Primitive;
